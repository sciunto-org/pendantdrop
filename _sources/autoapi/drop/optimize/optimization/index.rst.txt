:mod:`drop.optimize.optimization`
=================================

.. py:module:: drop.optimize.optimization


Module Contents
---------------

.. function:: young_laplace(surface_tension, angle, center_R, center_Z, radius, density, calib, *, RZ_edges=None, gravity=None, num_points=1000.0)

   Returns the Young Laplace solution resized and oriented to the image.


   :Parameters:

       **surface_tension** : scalar
           Surface tension

       **angle** : scalar
           Tilting angle.

       **center_R** : scalar
           Osculating circle center R-coordinate.

       **center_Z** : scalar
           Osculating circle center Z-coordinate.

       **radius** : scalar
           Osculating circle radius.

       **density** : scalar
           Fluid density.

       **calib** : scalar
           Calibration in m per px.

       **RZ_edges** : tuple of array, optional
           (Radial, Vertical) coordinates of the edge.
           Used to crop the profile to the experimental profile.
           If None, the solution is not cropped.

       **gravity** : scalar, optional
           Gravitational acceleration. If None, `scipy.constants.g` is used.

       **num_points** : scalar, optional
           Number of points used in `theoretical_contour`

   :Returns:

       **coordinates** : tuple
           (R, Z)













   ..
       !! processed by numpydoc !!


.. function:: deviation_edge_model_simple(variables, angle, center_R, center_Z, radius, RZ_edges, density, calib, *, RMS=None)

   Return the RMS for a profile given by set of parameters to the experimental profile.


   :Parameters:

       **variables** : tuple
           (surface tension, angle, center_R)

       **angle** : scalar
           ..

       **center_R :**
           ..

       **center_Z :**
           ..

       **radius :**
           ..

       **RZ_edges** : tuple of array
           (Radial, Vertical) coordinates of the edge.

       **calib** : scalar
           Calibration in m per px.

       **RMS** : callable
           function(R_theo, Z_theo, RZ_edges) to compute the RMS.
           If None, radial_RMS is used.

   :Returns:

       RMS
           ..













   ..
       !! processed by numpydoc !!


.. function:: deviation_edge_model_full(variables, RZ_edges, density, calib, *, RMS=None)

   Return the RMS for a profile given by set of parameters to the experimental profile.


   :Parameters:

       **variables** : tuple
           (surface tension, angle, center_R)

       **RZ_edges** : tuple of array
           (Radial, Vertical) coordinates of the edge.

       **calib** : scalar
           Calibration in m per px.

       **RMS** : callable
           function(R_theo, Z_theo, RZ_edges) to compute the RMS.
           If None, radial_RMS is used.

   :Returns:

       RMS
           ..













   ..
       !! processed by numpydoc !!


